"""discord user accounts

Revision ID: 5a322d952f06
Revises: 1fe16c92d06c
Create Date: 2023-12-21 18:03:46.136402

"""
import sqlalchemy as sa
from alembic import op

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "5a322d952f06"
down_revision = "1fe16c92d06c"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "discord_user_accounts",
        sa.Column("access_token", sa.String(length=1024), nullable=False),
        sa.Column("expires_at", sa.Integer(), nullable=False),
        sa.Column("refresh_token", sa.String(length=1024), nullable=False),
        sa.Column("scope", sa.String(length=256), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("discord_user_accounts_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("discord_user_accounts_pkey")),
        sa.UniqueConstraint(
            "access_token", name=op.f("discord_user_accounts_access_token_key")
        ),
        sa.UniqueConstraint(
            "refresh_token", name=op.f("discord_user_accounts_refresh_token_key")
        ),
        sa.UniqueConstraint("user_id", name=op.f("discord_user_accounts_user_id_key")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("discord_user_accounts")
    # ### end Alembic commands ###
